#Master server's address, should be {ip:port}
master.addr=127.0.0.1:20000

#Data server's address, should be {ip:port}
dataserver.addr=127.0.0.1:30000

#Slave server's address, should be {ip:port}, backup for master server
slave.addr=127.0.0.1:20001

#hdfs master node address, should be {ip:port}
hdfs.addr=127.0.0.1:9000

#zookeeper address, should be {ip:port}
zookeeper.addr=127.0.0.1:2181

#storage policy, could be {memory|persistent}
storage.policy=persistent

#cache replacement policy when data server cache is full, could be (random|fifo|lru)
dataserver.cache.replacement.policy=fifo

#check interval between each garbage collection, in seconds
gc.check.interval=120

#how many day that old data should be deleted
checkpoint.reserve.days=3

#days between each checkpoint, in day,could be realnumber
checkpoint.interval=1

#max size of redo log in master server, if the size exceeds it, master will create a checkpoint, in KB
master.redolog.max=1024
#in milliseconds
master.client.timeout=2000
#in milliseconds
master.dataserver.timeout=2000

#zookeeper session timeout seconds.
zookeeper.session.timeout=60

#heartbeat interval between master and data server
heartbeat.interval=5000
#capacity for data server
dataserver.capacity=1

#max size for region, in MB
region.max=1
#block size for region file, in KB
region.block.size=64
#approximate blocks in each index entry
region.index.block.num=2
#max client connections in data server
dataserver.connection.max=100

#max size of memory cache in data server
dataserver.cache.max=128

#max size of memory write buffer in data server
dataserver.buffer.max=128

#max size of redo log in data server.
#in persistent mode, this parameter will be ignored as data server will automatically flush data
#and create new redo log when the write buffer is full
dataserver.redolog.max=1024
#reconnect interval if it fails to connect master server
dataserver.reconnect.interval=5000
#max retry number if it fails to connect master server, 0 means max limit
dataserver.reconnect.retry=10

dataserver.weight=1
dataserver.master.timeout=2000
